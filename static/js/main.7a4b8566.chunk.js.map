{"version":3,"sources":["components/Title/index.jsx","context/index.js","components/InputForm/index.jsx","components/Data/Chart/index.jsx","components/Data/DataTable/index.jsx","components/Loading/index.jsx","components/Data/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["index","className","rel","href","target","Context","createContext","InputForm","handleSubmit","useContext","setInvestmentDate","setCurrentDate","setCdbRate","onSubmit","htmlFor","id","required","type","onChange","e","value","step","Chart","data","ResponsiveContainer","width","LineChart","Line","dataKey","XAxis","YAxis","domain","DataTable","map","d","date","unitPrice","Loading","Data","userMsg","loading","length","App","useState","setData","investmentDate","currentDate","cdbRate","setUserMsg","setLoading","context","a","preventDefault","fetch","response","json","pricingData","Provider","style","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a4b8566.chunk.js","sourcesContent":["import React from 'react';\n\nimport './style.css'\n\nexport default function index() {\n  return (\n    <div className='titleContainer'>\n      <h1>Precificador de CDB</h1>\n      <div className='infoContainer'>\n        <span>\n          Desenvolvido por <a rel=\"noreferrer\" href='https://github.com/guidugaich' target=\"_blank\">guidugaich</a>\n        </span>\n        <span>\n          <a rel=\"noreferrer\" href='https://github.com/guidugaich/cdb-pricer' target=\"_blank\">sobre o projeto</a>\n        </span>\n      </div>\n    </div>\n  )\n}\n","import { createContext } from 'react';\n\nconst Context = createContext({});\n\nexport default Context;","import { useContext } from 'react';\nimport Context from '../../context';\n\nimport './style.css'\n\nexport default function InputForm({ handleSubmit }) {\n  const { setInvestmentDate, setCurrentDate, setCdbRate } = useContext(Context)\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className='inputContainer'>\n        <label htmlFor=\"investmentDate\">Data de investimento:</label>\n        <input\n          id='investmentDate'\n          required\n          type='date'\n          onChange={(e) => setInvestmentDate(e.target.value)}\n        />\n      </div>\n      <div className=\"inputContainer\">\n        <label htmlFor=\"currentDate\">Data atual:</label>\n        <input\n          id=\"currentDate\"\n          required\n          type='date'\n          onChange={(e) => setCurrentDate(e.target.value)}\n        />\n\n      </div>\n      \n      <div className=\"inputContainer\">\n        <label htmlFor=\"cdbRate\">Taxa do CDB:</label>\n        <input\n          id=\"cdbRate\"\n          required\n          type='number'\n          step='0.01'\n          onChange={(e) => setCdbRate(e.target.value)}\n        />\n\n      </div>\n\n      <button type='submit'>Calcular</button>\n    </form>\n  )\n}\n","import React, { useContext } from 'react'\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  ResponsiveContainer } from 'recharts';\nimport Context from '../../../context'\n\nexport default function Chart() {\n  const { data } = useContext(Context)\n\n  return (\n    <ResponsiveContainer width='80%'>\n      <LineChart data={data}>\n        <Line type=\"monotone\" dataKey='unitPrice'/>\n        <XAxis dataKey=\"date\" />\n        <YAxis\n          type=\"number\"\n          domain={['dataMin - 10', 'dataMax + 10']}\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  )\n}\n","import React, { useContext } from 'react'\nimport Context from '../../../context'\n\nimport './style.css'\n\nexport default function DataTable() {\n  const { data } = useContext(Context)\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Data</th>\n          <th>Preço (R$)</th>\n        </tr>\n      </thead>\n      <tbody>\n        {!data ? <div>Dados indisponíveis</div> : (\n          data.map((d, index) => (\n            <tr key={index}>\n              <td>{d.date}</td>\n              <td>{d.unitPrice}</td>\n            </tr>\n          ))\n        )}\n      </tbody>\n    </table>\n  )\n}\n","import React from 'react';\n\nimport './style.css';\n\n// https://dev.to/stackfindover/how-to-create-a-dot-loading-animation-hc7\nexport default function Loading() {\n  return (\n    <div className=\"loader-outer\">\n      <div className=\"loader\">\n        <span className=\"dot dot-1\"></span>\n        <span className=\"dot dot-2\"></span>\n        <span className=\"dot dot-3\"></span>\n    </div>\n  </div>\n  )\n}","import React, { useContext } from 'react'\nimport Context from '../../context'\n\nimport Chart from './Chart'\nimport DataTable from './DataTable'\nimport Loading from '../Loading'\n\nimport './style.css'\n\nexport default function Data() {\n  const { data, userMsg, loading } = useContext(Context)\n\n  return (\n    <>\n      {loading ? <Loading /> : (\n        <>\n          {!data.length ? <h2>{userMsg}</h2> : (\n            <div className='dataContainer'>\n              <DataTable />\n              <Chart />\n            </div>\n          )}\n        </>\n      )}\n    </>\n  )\n}\n","import React, { useState } from 'react';\n\nimport Title from './components/Title';\nimport InputForm from './components/InputForm';\nimport Data from './components/Data';\n\nimport './App.css';\n\nimport Context from './context';\n\nconst BASE_URL = 'https://cdb-pricer.herokuapp.com/pricing';\n\nfunction App() {\n  const [data, setData] = useState([])\n  const [investmentDate, setInvestmentDate] = useState('');\n  const [currentDate, setCurrentDate] = useState('');\n  const [cdbRate, setCdbRate] = useState(0);\n  const [userMsg, setUserMsg] = useState('Preencha os dados no formulário.')\n  const [loading, setLoading] = useState(false)\n\n  const context = {\n    investmentDate,\n    setInvestmentDate,\n    currentDate,\n    setCurrentDate,\n    cdbRate,\n    setCdbRate,\n    userMsg,\n    data,\n    loading\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true)\n\n    const response = await fetch(`${BASE_URL}?investmentDate=${investmentDate}&currentDate=${currentDate}&cdbRate=${cdbRate}`);\n  \n    const { data: pricingData } = await response.json();\n\n    if (pricingData) {\n      setData(pricingData)\n    } else {\n      setData([])\n      setUserMsg('Dados não disponíveis. Preencha o formulário novamente.')\n    }\n\n    setLoading(false)\n  }\n\n  return (\n    <Context.Provider value={context}>\n      <main>\n        <Title />\n        <hr style={{width: '90%'}}/>\n        <InputForm handleSubmit={handleSubmit} />\n        <Data />\n      </main>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}